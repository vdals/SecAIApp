"""initial

Revision ID: 3f9b1af4cd91
Revises: 
Create Date: 2025-04-21 23:00:35.089218

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3f9b1af4cd91'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_id'), 'location', ['id'], unique=False)
    op.create_index(op.f('ix_location_name'), 'location', ['name'], unique=False)
    op.create_table('permission',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_id'), 'permission', ['id'], unique=False)
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_table('role',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('camera',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=255), nullable=True),
    sa.Column('rtsp_url', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('resolution_width', sa.Integer(), nullable=True),
    sa.Column('resolution_height', sa.Integer(), nullable=True),
    sa.Column('fps', sa.Integer(), nullable=True),
    sa.Column('rotation', sa.Integer(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_camera_id'), 'camera', ['id'], unique=False)
    op.create_index(op.f('ix_camera_name'), 'camera', ['name'], unique=False)
    op.create_table('user_location',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'location_id')
    )
    op.create_table('video',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=512), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('resolution_width', sa.Integer(), nullable=True),
    sa.Column('resolution_height', sa.Integer(), nullable=True),
    sa.Column('fps', sa.Integer(), nullable=True),
    sa.Column('codec', sa.String(length=50), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=True),
    sa.Column('recording_start', sa.DateTime(), nullable=False),
    sa.Column('recording_end', sa.DateTime(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('is_analyzed', sa.Boolean(), nullable=False),
    sa.Column('processing_status', sa.String(length=50), nullable=False),
    sa.Column('camera_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_video_camera_id'), 'video', ['camera_id'], unique=False)
    op.create_index(op.f('ix_video_filename'), 'video', ['filename'], unique=False)
    op.create_index(op.f('ix_video_id'), 'video', ['id'], unique=False)
    op.create_table('event',
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=False),
    sa.Column('is_false_positive', sa.Boolean(), nullable=False),
    sa.Column('frame_number', sa.Integer(), nullable=True),
    sa.Column('frame_timestamp', sa.DateTime(), nullable=True),
    sa.Column('frame_path', sa.String(length=512), nullable=True),
    sa.Column('camera_id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_camera_id'), 'event', ['camera_id'], unique=False)
    op.create_index(op.f('ix_event_event_type'), 'event', ['event_type'], unique=False)
    op.create_index(op.f('ix_event_id'), 'event', ['id'], unique=False)
    op.create_index(op.f('ix_event_timestamp'), 'event', ['timestamp'], unique=False)
    op.create_index(op.f('ix_event_video_id'), 'event', ['video_id'], unique=False)
    op.create_table('object',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('object_type', sa.String(length=100), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('x_min', sa.Integer(), nullable=False),
    sa.Column('y_min', sa.Integer(), nullable=False),
    sa.Column('x_max', sa.Integer(), nullable=False),
    sa.Column('y_max', sa.Integer(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_object_event_id'), 'object', ['event_id'], unique=False)
    op.create_index(op.f('ix_object_id'), 'object', ['id'], unique=False)
    op.create_index(op.f('ix_object_object_type'), 'object', ['object_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_object_object_type'), table_name='object')
    op.drop_index(op.f('ix_object_id'), table_name='object')
    op.drop_index(op.f('ix_object_event_id'), table_name='object')
    op.drop_table('object')
    op.drop_index(op.f('ix_event_video_id'), table_name='event')
    op.drop_index(op.f('ix_event_timestamp'), table_name='event')
    op.drop_index(op.f('ix_event_id'), table_name='event')
    op.drop_index(op.f('ix_event_event_type'), table_name='event')
    op.drop_index(op.f('ix_event_camera_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_video_id'), table_name='video')
    op.drop_index(op.f('ix_video_filename'), table_name='video')
    op.drop_index(op.f('ix_video_camera_id'), table_name='video')
    op.drop_table('video')
    op.drop_table('user_location')
    op.drop_index(op.f('ix_camera_name'), table_name='camera')
    op.drop_index(op.f('ix_camera_id'), table_name='camera')
    op.drop_table('camera')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_index(op.f('ix_permission_id'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_location_name'), table_name='location')
    op.drop_index(op.f('ix_location_id'), table_name='location')
    op.drop_table('location')
    # ### end Alembic commands ### 